@function color-yiq($background) {
  $r: red($background);
  $g: green($background);
  $b: blue($background);

  $yiq: calc((($r * 299) + ($g * 587) + ($b * 114)) / 1000);

  @if ($yiq >= 128) {
    @return #111;
  } @else {
    @return #fff;
  }
}

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function fade($background, $alpha) {
  $r: red($background);
  $g: green($background);
  $b: blue($background);
  @return rgba($r, $g, $b, $alpha);
}

body {
  @each $color, $value in map-deep-get($themes, default) {
    --bs-#{$color}: #{$value};
    .bg-#{$color} {
      color: color-yiq($value);
      background-color: $value !important;
    }
    .text-#{$color} {
      color: $value !important;
    }
    $num: 5;
    @while $num < 100 {
      $darker: darken($value, $num);
      $lighter: lighten($value, $num);
      .bg-#{$color} {
        &.lighten-#{$num} {
          color: color-yiq($lighter);
          background-color: $lighter !important;
        }
        &.darken-#{$num} {
          color: color-yiq($darker);
          background-color: $darker !important;
        }
        &.fade-#{$num} {
          background-color: fade($value, calc($num / 100)) !important;
        }
        &.fade-lighten-#{$num} {
          background-color: fade($lighter, calc($num / 100)) !important;
        }
        &.fade-darken-#{$num} {
          background-color: fade($darker, calc($num / 100)) !important;
        }
      }
      .text-#{$color}.darken-#{$num} {
        color: $darker !important;
      }

      .text-#{$color}.lighten-#{$num} {
        color: $lighter !important;
      }
      $num: $num + 5;
    }
  }
}

:root {
  body[data-theme="dark"] {
    @each $color, $value in map-deep-get($themes, dark) {
      --bs-#{$color}: #{$value};
      .bg-#{$color} {
        color: color-yiq($value);
        background-color: $value !important;
      }
      .text-#{$color} {
        color: $value !important;
      }
      $num: 5;
      @while $num < 100 {
        $darker: darken($value, $num);
        $lighter: lighten($value, $num);
        .bg-#{$color} {
          &.lighten-#{$num} {
            color: color-yiq($lighter);
            background-color: $lighter !important;
          }
          &.darken-#{$num} {
            color: color-yiq($darker);
            background-color: $darker !important;
          }
          &.fade-#{$num} {
            background-color: fade($value, calc($num / 100)) !important;
          }
          &.fade-lighten-#{$num} {
            background-color: fade($lighter, calc($num / 100)) !important;
          }
          &.fade-darken-#{$num} {
            background-color: fade($darker, calc($num / 100)) !important;
          }
        }
        .text-#{$color}.darken-#{$num} {
          color: $darker !important;
        }

        .text-#{$color}.lighten-#{$num} {
          color: $lighter !important;
        }
        $num: $num + 5;
      }
    }
    color: var(--bs-light);
  }
}

.clip-text {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;
  max-width: 95%;
}

.action {
  cursor: pointer;
}
.no-select {
  user-select: none;
}

.scrollable-x {
  max-width: 100%;
  overflow-x: auto;
}
.scrollable-y {
  max-height: 100%;
  overflow-y: auto;
}

.disabled {
  position: relative;
  pointer-events: none;
  // opacity: 0.65;
  &::after {
    cursor: not-allowed;
    pointer-events: all;
    position: absolute;
    content: "";
    display: flex;
    align-items: center;
    justify-content: center;
    color: #ffffff;
    font-weight: bold;
    letter-spacing: 0.25rem;
    text-shadow: 1px 1px 0 #555, -1px -1px 0 #555, 1px -1px 0 #555, -1px 1px 0 #555, 1px 1px 0 #555;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(85, 85, 85, 0.37);
    &.text-disabled {
      content: "DISABLED";
    }
  }
}

.on-hover {
  transition: all 0.2s linear;
  opacity: 0;
  pointer-events: none;
}
*:hover > .on-hover {
  opacity: 1;
  pointer-events: all;
}

.square {
  border-radius: 0 !important;
}
.square-left {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
.square-right {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
.square-top {
  border-top-right-radius: 0 !important;
  border-top-left-radius: 0 !important;
}
.square-bottom {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
.square-bottom-left {
  border-bottom-left-radius: 0 !important;
}
.square-bottom-right {
  border-bottom-right-radius: 0 !important;
}
.square-top-left {
  border-top-left-radius: 0 !important;
}
.square-top-right {
  border-top-right-radius: 0 !important;
}

.selectable {
  position: relative;
  &:hover {
    cursor: pointer;
    &:after {
      opacity: 0.1;
    }
  }

  &:after {
    border-radius: inherit;
    bottom: 0;
    color: inherit;
    content: "";
    left: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.6, 1);
    background-color: currentColor;
  }
}

.elevation-1 {
  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);
}
.elevation-2 {
  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}
.elevation-3 {
  box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
}
.elevation-4 {
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
}
.elevation-5 {
  box-shadow: 0 2px 5px -1px rgba(0, 0, 0, 0.2), 0 5px 6px 0 rgba(0, 0, 0, 0.14), 0 1px 12px 0 rgba(0, 0, 0, 0.12);
}
